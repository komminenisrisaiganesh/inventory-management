CREATION:
SQL>CREATE TABLE brands ( bid number(5) PRIMARY KEY, bname
varchar(20) );
Table created
INSERTION:
SQL> insert into brands values(1,’APPLE');
1 row created
SQL> insert into brands values(2,’Samsung');
1 row created
SQL> insert into brands values(3,'Nike');z
1 row created
SQL> into brands values(4,'Fortune');
1 row created

2. INV_USER TABLE:
CREATION:
SQL> CREATE TABLE inv_user( user_id varchar(20) PRIMARY KEY, name
varchar(20), password varchar(20), last_login timestamp, user_type
varchar(10) );
Table created
INSERTION:
SQL> insert into inv_user values( 'vidit@gmail.com','vidit','1234','31-oct-18
12:40','admin');
1 row created
SQL> insert into inv_user values('harsh@gmail.com','Harsh
Khanelwal','1111','30-oct18 10:20’,' Manager');
1 row created

SQL> insert into inv_user values('prashant@gmail.com','Prashant','0011','29-
oct-18 10:20’,' Accountant');
1 row created

3. CATEGORIES TABLE:
CREATION:
SQL> CREATE TABLE categories( cid number(5) PRIMARY KEY,
category_name varchar(20) );
Table created
INSERTION:
SQL> insert into categories values(1,'ELECTRONICS');
1 row created
SQL> insert into categories values(2,'Clothing');
1 row created
SQL> insert into categories values(3,'Grocey');
1 row created

4. STORE TABLE:
CREATION:
SQL> CREATE TABLE stores( sid number(5) PRIMARY KEY, sname
varchar(20), address varchar(20), mobno number(10) );
Table created
INSERTION:
SQL> insert into stores values(1,'Ram Kumar,'Katpadi Vellore,9999999999);
1 row created
SQL> insert into stores values(3,'Suraj','Haryana',7777555541);
1 row created
SQL> insert into stores values(2,'Rakesh Kumar,'Chennai,8888555541);
1 row created



5. Product TABLE:
CREATION:
SQL> CREATE TABLE product( pid number(5) primary key, cid number(5)
references categories(cid), bid number(5) references brands(bid), sid number(5)
REFERENCES stores(sid), pname varchar(20), p_stock number(5), price
number(5), added_date date);
Table created
INSERTION:
SQL> insert into product values(1,1,1,1,'IPHONE',4,45000,'31-oct-18'); insert
into product values(2,1,1,1,'Airpods',3,19000,'27-oct-18');
1 row created
SQL insert into product values(3,1,1,1,'Smart Watch',3,19000,'27-oct-18'); insert
into product values(4,2,3,2,'Air Max',6,7000,'27-oct-18');
1 row created
SQL> insert into product values(5,3,4,3,'REFINED OIL',6,750,'25-oct-18');
1 row created

6. PROVIDES TABLE:
CREATION:
SQL> CREATE TABLE provides( bid number(5)references brands(bid), sid
number(5)references stores(sid), discount number(5));
Table created
INSERTION:
SQL> insert into provides values(1,1,12);
1 row created
SQL > insert into provides values(2,2,7);
1 row created
SQL> insert into provides values(3,3,15);
1 row created
SQL> insert into provides values(1,2,7);
1 row created

SQL> insert into provides values(4,2,19);
1 row created
SQL> insert into provides values(4,3,20);
1 row created

7. CUSTOMER_CART TABLE:
CREATION:
SQL> CREATE TABLE customer_cart( cust_id number(5) primary key, name
varchar(20), mobno number(10) );
Table created
INSERTION:
SQL> insert into customer_cart values(1,'Ram',9876543210);
1 row created
SQL> into customer_cart values(2,'Shyam',7777777777);
1 row created
SQL> insert into customer_cart values(3,'Mohan',7777777775);
1 row created

8. SELECT_PRODUCT TABLE:
CREATION:
SQL> CREATE TABLE select_product( cust_id number(5) references
customer_cart(cust_id), pid number(5)references product(pid), quantity
number(4) );
Table created

INSERTION:
SQL> insert into select_product values(1,2,2);
1 row created
SQL> insert into select_product values(1,3,1);
1 row created
SQL> insert into select_product values(2,3,3);
1 row created
SQL> insert into select_product values(3,2,1);
1 row created

9. TRANSACTIONS TABLE:
CREATION:
SQL> CREATE TABLE transaction1( id number(5) primary key, total_amount
number(5), paid number(5), due number(5), gst number(3), discount number(5),
payment_method varchar(10), cart_id number(5) references
customer_cart(cust_id) );
Table created
INSERTION:
SQL> insert into transaction1 values(1,57000,2000,5000,350,350,'card',1);
1 row created
SQL> insert into transaction1 values(2,57000,57000,0,570,570,'cash',2);
1 row created
SQL> insert into transaction1 values(3,19000,17000,2000,190,190,'cash',3);
1 row created


QUERIES:

1Q. What are the brands?
SQL>select bname from brands;

2Q. Display the profit of each movie with movie and profit.
SQL> select name,user_type from inv_user;

3Q. Display transactions with total amount > 50,000.
SQL> SELECT * FROM transaction1 WHERE total_amount>50000;

4Q. Display category’s details that are present in products too.
SQL> select * FROM categories c,product p WHERE p.cid=c.cid;

5Q. Displaythe combined details of stores and provides.
SQL> select * FROM stores s,provides p where p.sid=s.sid;

6Q. Print all the transactions paid via cash?
SQL> SELECT * FROM transaction1 WHERE payment_method=‘cash';

7Q. Retrieve the total stock for each category?
SQL> SELECT category_name, SUM(p_stock) AS total_stock FROM product
JOIN categories ON product.cid = categories.cid GROUP BY category_name;

8Q. Retrieve the customers who have a due amount in transactions?
SQL> SELECT DISTINCT cust_id, name FROM customer_cart
JOIN transaction1 ON customer_cart.cust_id = transaction1.cart_id
WHERE due > 0;

9Q. Retrieve the total quantity of each product in the customer carts?
SQL> SELECT pname, SUM(quantity) AS total_quantity FROM select_product
JOIN product ON select_product.pid = product.pid
GROUP BY pname;

10Q . Display the average price of products for each brand?
SQL> SELECT bname, AVG(price) AS avg_price FROM product
JOIN brands ON product.bid = brands.bid GROUP BY bname;

11Q. Retrieve the names and addresses of stores providing a discount?
SQL> SELECT DISTINCT sname, address FROM stores JOIN provides ON
stores.sid = provides.sid;

12Q. Tabulate the latest added products and their prices?
SQL> SELECT p.pname, p.price, p.added_date FROM product p ORDER BY
p.added_date DESC LIMIT 5;

13Q. Show the products in the customer's cart along with the total cost?
SQL> SELECT c.name AS customer_name, p.pname, sp.quantity, p.price *
sp.quantity AS total_cost FROM customer_cart c JOIN select_product sp ON
c.cust_id = sp.cust_id JOIN product p ON sp.pid = p.pid;

14Q. Retrieve the store names and addresses with the highest discount provided.
SQL> SELECT s.sname, p.discount FROM provides p JOIN stores s ON p.sid =
s.sid WHERE p.discount = (SELECT MAX(discount) FROM provides);

